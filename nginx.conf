#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

         
        location / {
            root   html;
            index  index.html index.htm;
        }
         location /auth {

            #auth_basic           "Administratorâ€™s area";
            #auth_basic_user_file /usr/local/etc/nginx/conf.d/.htpasswd;
          if ($arg_psk = 'HU42d9a07d77274f42b5aea6524f8e9b5') {
           return 201;
          }
          return 401;
        }
        location /control {
            rtmp_control all;
        }
        location /hls {
                #cookie configuration
               # if ($cookie_psk != "HU42d9a07d77274f42b5aea6524f8e9b5") {
                #    return 403;
                #}
  
                add_header 'Cache-Control' 'no-cache';
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                add_header 'Access-Control-Allow-Headers' 'Range';

                if ($request_method = 'OPTIONS') {
                       add_header 'Access-Control-Allow-Origin' '*';
                       add_header 'Access-Control-Allow-Headers' 'Range';
                       add_header 'Access-Control-Max-Age' 1728000;
                       add_header 'Content-Type' 'text/plain charset=UTF-8';
                       add_header 'Content-Length' 0;
                       return 204;
                }
                #serve HLS fragments
                types {
                       application/dash+xml mpd;
                       application/vnd.apple.mpegurl m3u8;
                       video/mp2t ts;
                }

                root /home/ubuntu/nginx-stream;
                add_header Cache-Control no-cache;      
                    
        }


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }



    }


    # server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      /etc/ssl_config/ssl/example.crt;
    #    ssl_certificate_key  /etc/ssl_config/ssl/example.key;
    #    return 1935;
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
  }
  rtmp {
       server {
               listen 1935;
               chunk_size 4096;
               ping 30s;
               notify_method get;
       application live {
       on_publish http://localhost/auth;
       live on;
       allow publish all;
       allow play all;
       
       #record off;
       recorder rec1 {
         record all manual;
         record_path /home/ubuntu/nginx-stream/hls;
         record_unique on;
       }
       #exec_pull ffmpeg -i rtmp://admin:admin@localhost:8050/$name -vcodec copy -acodec copy -f   flv rtmp://localhost/$app/$name;
       exec ffmpeg -re -i rtmp://localhost/$app/$name
  -vcodec libx264 -threads 0 -vprofile baseline -acodec aac -strict -2 -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune #zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/show/${name}_720
  -vcodec libx264 -threads 0 -vprofile baseline -acodec aac -strict -2 -b:v 1024k -b:a 128k -vf "scale=854:trunc(ow/a/2)*2" -tune #zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/show/${name}_480
  -vcodec libx264 -threads 0 -vprofile baseline -acodec aac -strict -2 -b:v 300k -b:a 96k -vf "scale=426:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/show/${name}_240;
       }
       application vod {
           on_play http://localhost:80/auth;
           play /home/ubuntu/nginx-stream/hls;
       }
      application show {
            live on;
            hls on;
            hls_path /home/ubuntu/nginx-stream/hls;
            hls_nested on;
            #record off;
            
            # Instruct clients to adjust resolution according to bandwidth

            hls_variant _720 BANDWIDTH=2048000; # High bitrate, HD 720p resolution
            hls_variant _480 BANDWIDTH=448000; # Medium bitrate, SD resolution
            hls_variant _240 BANDWIDTH=288000; # Low bitrate, sub-SD resolution
      }

  }
}
